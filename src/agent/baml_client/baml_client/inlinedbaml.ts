/*************************************************************************************************

Welcome to Baml! To use this generated code, please run one of the following:

$ npm install @boundaryml/baml
$ yarn add @boundaryml/baml
$ pnpm add @boundaryml/baml

*************************************************************************************************/

// This file was generated by BAML: please do not edit it. Instead, edit the
// BAML files and re-generate this code using: baml-cli generate
// You can install baml-cli with:
//  $ npm install @boundaryml/baml
//
/* eslint-disable */
// tslint:disable
// @ts-nocheck
// biome-ignore format: autogenerated code

const fileMap = {
  
  "event-analysis/functions/event_researcher.baml": "function ResearchEvents(location: string, year: int, topic: string) -> EventWithDetails[] {\n  client Claude3\n  \n  prompt #\"\n    You are an expert event researcher. Search for {{topic}} events in {{location}} for the year {{year}}.\n    \n    Find major conferences, summits, and expos related to {{topic}}.\n    \n    For each event found, extract:\n    - Event details (name, dates, venue, website)\n    - List of sponsors with their company information\n    - List of speakers with their professional details\n    \n    Return structured data following the schema.\n    Only include verified information. Use null for unknown fields.\n  \"#\n}\n\nfunction ExtractEvents(searchResults: string) -> EventWithDetails[] {\n  client Claude3\n  \n  prompt #\"\n    You are an event data extraction specialist. Extract structured event information from the following search results:\n    \n    {{searchResults}}\n    \n    Return a JSON array where each element has this EXACT structure:\n    \n    [\n      {\n        \"event\": {\n          \"name\": \"Event Name\",\n          \"year\": 2025,\n          \"dates\": \"Date range or specific date\",\n          \"venue\": \"Venue name\",\n          \"city\": \"City name\",\n          \"country\": \"Country\",\n          \"industry\": \"Industry/topic\",\n          \"attendeeCount\": 10000,\n          \"description\": \"Event description\",\n          \"website\": \"https://website.com\",\n          \"organizer\": \"Organizer name\",\n          \"type\": \"conference\"\n        },\n        \"sponsors\": [\n          {\n            \"company\": {\n              \"name\": \"Company Name\",\n              \"website\": \"https://company.com\",\n              \"industry\": \"Industry\"\n            },\n            \"sponsorshipTier\": \"Gold\"\n          }\n        ],\n        \"speakers\": [\n          {\n            \"name\": \"Speaker Name\",\n            \"title\": \"Job Title\",\n            \"company\": \"Company Name\"\n          }\n        ]\n      }\n    ]\n    \n    IMPORTANT: \n    - Return ONLY the JSON array, no wrapper objects or extra keys\n    - Do NOT wrap the array in {\"events\": [...]}\n    - Use null for unknown fields, not empty strings\n    - Only extract events that are actually mentioned in the search results\n    - Ensure each event has at least a name and basic details\n  \"#\n}",
  "event-analysis/functions/people_enricher.baml": "function FindCompanyPOCs(searchResults: string) -> Person[] {\n  client Claude3\n  \n  prompt #\"\n    You are a people data enrichment specialist. Extract information about key decision makers from the following search results:\n    \n    {{searchResults}}\n    \n    Focus on finding these priority roles:\n    1. C-Suite executives (CEO, CTO, CMO, CFO)\n    2. VP/Head of Sales\n    3. VP/Head of Marketing\n    4. VP/Head of Business Development\n    5. Director of Partnerships\n    \n    Return a JSON array of Person objects. Each Person object must have this EXACT structure:\n    {\n      \"name\": \"Full Name\",\n      \"title\": \"Job Title\" or null,\n      \"company\": \"Company Name\" or null,\n      \"email\": \"email@company.com\" or null,\n      \"phone\": \"phone number\" or null,\n      \"linkedinUrl\": \"https://linkedin.com/in/profile\" or null,\n      \"bio\": \"Brief professional bio\" or null,\n      \"location\": \"City, Country\" or null,\n      \"expertise\": [\"skill1\", \"skill2\"] or null,\n      \"sessionType\": null,\n      \"topic\": null,\n      \"role\": \"Executive role\" or null\n    }\n    \n    IMPORTANT:\n    - Return ONLY the JSON array, no other text\n    - Only include people who are explicitly named and have clear roles\n    - Use null for unknown fields, not empty strings\n    - Focus on leadership positions and decision makers\n    \n    Example output:\n    [\n      {\n        \"name\": \"John Smith\",\n        \"title\": \"CEO\",\n        \"company\": \"Example Corp\",\n        \"email\": \"john.smith@example.com\",\n        \"phone\": null,\n        \"linkedinUrl\": \"https://linkedin.com/in/johnsmith\",\n        \"bio\": \"CEO with 15 years of experience\",\n        \"location\": \"San Francisco, CA\",\n        \"expertise\": [\"Leadership\", \"Strategy\"],\n        \"sessionType\": null,\n        \"topic\": null,\n        \"role\": \"CEO\"\n      }\n    ]\n  \"#\n}\n\nfunction FindCompanyPOCsByRoles(searchResults: string, targetRoles: string[]) -> Person[] {\n  client Claude3\n  \n  prompt #\"\n    You are a people data enrichment specialist. Extract information about specific decision makers from the following search results:\n    \n    {{searchResults}}\n    \n    CRITICAL: Only extract people who have ONE of these specific roles/titles:\n    {% for role in targetRoles %}\n    - {{role}}\n    {% endfor %}\n    \n    DO NOT include people with other roles, even if they are executives. ONLY include people whose title matches one of the above roles.\n    \n    Return a JSON array of Person objects. Each Person object must have this EXACT structure:\n    {\n      \"name\": \"Full Name\",\n      \"title\": \"Job Title\" or null,\n      \"company\": \"Company Name\" or null,\n      \"email\": \"email@company.com\" or null,\n      \"phone\": \"phone number\" or null,\n      \"linkedinUrl\": \"https://linkedin.com/in/profile\" or null,\n      \"bio\": \"Brief professional bio\" or null,\n      \"location\": \"City, Country\" or null,\n      \"expertise\": [\"skill1\", \"skill2\"] or null,\n      \"sessionType\": null,\n      \"topic\": null,\n      \"role\": \"Executive role\" or null\n    }\n    \n    IMPORTANT:\n    - Return ONLY the JSON array, no other text\n    - Only include people who are explicitly named and have one of the target roles\n    - Use null for unknown fields, not empty strings\n    - Be strict about role matching - the person's title must clearly match one of the target roles\n    - If no one matches the target roles, return an empty array []\n    \n    Example: If targetRoles = [\"CEO\", \"VP Sales\"], only return people with CEO or VP Sales titles, ignore all others.\n  \"#\n}\n\nfunction EnrichPerson(personResearchResults: string) -> Person {\n  client Claude3\n  \n  prompt #\"\n    You are a contact enrichment specialist. Extract person information from the following research results:\n    \n    {{personResearchResults}}\n    \n    Return a single Person object with this EXACT structure:\n    {\n      \"name\": \"Full Name\",\n      \"title\": \"Job Title\" or null,\n      \"company\": \"Company Name\" or null,\n      \"email\": \"email@company.com\" or null,\n      \"phone\": \"phone number\" or null,\n      \"linkedinUrl\": \"https://linkedin.com/in/profile\" or null,\n      \"bio\": \"Professional biography\" or null,\n      \"location\": \"City, Country\" or null,\n      \"expertise\": [\"skill1\", \"skill2\"] or null,\n      \"sessionType\": null,\n      \"topic\": null,\n      \"role\": \"Professional role\" or null\n    }\n    \n    IMPORTANT:\n    - Return ONLY the JSON object, no other text\n    - Use null for unknown fields, not empty strings\n    - Only extract information explicitly stated in the research results\n    - Focus on professional and contact information\n    \n    Example output:\n    {\n      \"name\": \"Jane Doe\",\n      \"title\": \"VP of Engineering\",\n      \"company\": \"Tech Corp\",\n      \"email\": \"jane.doe@techcorp.com\",\n      \"phone\": null,\n      \"linkedinUrl\": \"https://linkedin.com/in/janedoe\",\n      \"bio\": \"Experienced engineering leader with 10+ years in tech\",\n      \"location\": \"New York, NY\",\n      \"expertise\": [\"Engineering\", \"Leadership\", \"Technology\"],\n      \"sessionType\": null,\n      \"topic\": null,\n      \"role\": \"VP of Engineering\"\n    }\n  \"#\n}",
  "event-analysis/functions/sponsor_extractor.baml": "function ExtractSponsors(searchResults: string) -> Company[] {\n  client Claude3\n  \n  prompt #\"\n    You are a sponsor data extraction specialist. Extract sponsor information from the following search results:\n    \n    {{searchResults}}\n    \n    Find companies that are:\n    - Event sponsors\n    - Exhibitors\n    - Partners\n    - Supporting organizations\n    \n    Return a JSON array of Company objects. Each Company object must have this EXACT structure:\n    {\n      \"name\": \"Company Name\",\n      \"website\": \"company.com\" or null,\n      \"industry\": \"Industry/Sector\" or null,\n      \"description\": \"Brief description\" or null,\n      \"headquarters\": \"Location\" or null,\n      \"founded\": 2000 or null,\n      \"employeesRange\": \"100-500\" or null\n    }\n    \n    IMPORTANT:\n    - Return ONLY the JSON array, no other text\n    - Use \"name\" not \"companyName\" \n    - Use \"founded\" not \"yearFounded\"\n    - Use \"employeesRange\" not \"employeeCount\"\n    - Use null for unknown fields, not empty strings\n    - Only include companies explicitly mentioned as sponsors/exhibitors/partners\n    \n    Example output:\n    [\n      {\n        \"name\": \"Example Corp\",\n        \"website\": \"example.com\",\n        \"industry\": \"Technology\",\n        \"description\": \"A technology company\",\n        \"headquarters\": \"San Francisco, CA\",\n        \"founded\": 2010,\n        \"employeesRange\": \"50-100\"\n      }\n    ]\n  \"#\n}\n\nfunction EnrichCompany(companyResearchResults: string) -> Company {\n  client Claude3\n  \n  prompt #\"\n    You are a company data enrichment specialist. Extract company information from the following research results:\n    \n    {{companyResearchResults}}\n    \n    Extract the following information:\n    - Official company name\n    - Company website\n    - Industry/sector classification\n    - Brief company description (1-2 sentences)\n    - Headquarters location\n    - Year founded\n    - Employee count range (e.g., \"100-500\", \"1000-5000\")\n    \n    Return structured data following the Company schema.\n    Use null for fields where information is not available.\n    Only extract information that is explicitly stated in the research results.\n  \"#\n}",
  "event-analysis/functions/test_simple.baml": "function SimpleTest(input: string) -> string {\n  client Claude3\n  \n  prompt #\"\n    Echo back the following text exactly: {{input}}\n  \"#\n}",
  "event-analysis/models.baml": "class Event {\n  name string\n  year int\n  dates string?\n  venue string?\n  city string\n  country string?\n  industry string\n  attendeeCount int?\n  description string?\n  website string?\n  organizer string?\n  type string?\n}\n\nclass Company {\n  name string\n  website string?\n  industry string?\n  description string?\n  headquarters string?\n  founded int?\n  employeesRange string?\n}\n\nclass Sponsor {\n  company Company\n  sponsorshipTier string?\n}\n\nclass Person {\n  name string\n  title string?\n  company string?\n  email string?\n  phone string?\n  linkedinUrl string?\n  bio string?\n  location string?\n  expertise string[]?\n  sessionType string?\n  topic string?\n  role string?\n}\n\nclass EventWithDetails {\n  event Event\n  sponsors Sponsor[]\n  speakers Person[]\n}",
  "generators.baml": "generator target {\n    output_type \"typescript\"\n    output_dir \"../baml_client\"\n    version \"0.202.1\"\n    default_client_mode async\n}",
  "shared/clients.baml": "client<llm> GPT4 {\n  provider openai\n  options {\n    model \"gpt-4\"\n    temperature 0\n  }\n}\n\nclient<llm> Claude3 {\n  provider anthropic\n  options {\n    model \"claude-3-5-sonnet-20241022\"\n    max_tokens 4096\n    temperature 0\n  }\n}",
  "shared/config.baml": "retry_policy ExpBackoff {\n  max_retries 3\n  strategy {\n    type exponential_backoff\n    initial_delay_ms 1000\n    max_delay_ms 10000\n    multiplier 2\n  }\n}",
}
export const getBamlFiles = () => {
    return fileMap;
}